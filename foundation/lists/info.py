# Cписки (list) ::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::

# упорядоченные изменяемые коллекции объектов произвольных типов (почти как 
# массив, но типы могут отличаться).

mas.index(x, [start, [end]])
# получение индекса значения (при этом поиск ведется от start до end)

mas.sort([key = function])
# Сортирует список на основе функции сортирует сам список
	
sorted(mas)
# возвращает отсортированную копию списка	

len(mas)
# возвращает кол-во элементов в списке															

list("test")
# ['t', 'e', 's', 't']

s = []
# пустой список

# генератор списков
test2 = [c * 3 for c in 'test']
test3 = [c * 3 for c in 'test3' if c != '3']


# методы списков ::::::::::::::::::::::::::::::::::

mas.append(x)
# Добавляет элемент в конец списка

mas.extend(L)
# Расширяет список list, добавляя в конец все элементы списка L

mas.insert(i, x)
# Вставляет на i-ый индекс значение x

mas.remove(x)
# Удаляет первый элемент в списке, имеющий значение x. ValueError, если 
# такого элемента не существует

mas.pop([i])
# Удаляет i-ый элемент и возвращает его. Если индекс не указан, удаляется 
# последний элемент

mas.count(x)
# определяет кол-во включений значения в списке

mas.reverse()
# Разворачивает список

mas.copy()
# Поверхностная копия списка

list(mas)
# сделать копию

mas[:]
# сделать копию
	
mas.clear()
# Очищает список

del mas[-1]
# удаляет элемент из масива

del mas[1:3]
# удаление элементов входящих в указанный срез

'ex' in list
# True проверка на наличие

'.'.join(list)
# объеденить элементы списка в строку с точкой как объеденяющий элемент	

lst.index(x)
# Определение первой слева позиции элемента x в списке lst. Если такого элемента нет, 
# возникает сообщение об ошибке

zip(lst1, lst2)
# позволяет получить из элементов различных списков список кортежей, состоящих из 
# соответствующих элементов списков. Аргументами функции zip() являются два или более 
# списков, а результатом — список кортежей, составленных из элементов исходных 
# списков с одинаковыми номерами (первый кортеж составляется из элементов с номерм 0, 
# второй — из элементов с номером 1 и т.д.)
# Пример:
# lst1 =[1 ,2 ,3 ,4]
# lst2=[’tri ’,’dva’,’raz’]
# lst=zip(lst1 ,lst2)
# lst → [(1, ’tri’), (2, ’dva’), (3, ’raz’)]


